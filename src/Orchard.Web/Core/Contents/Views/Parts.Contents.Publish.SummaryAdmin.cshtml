@using Orchard.ContentManagement;
@using Orchard.Core.Contents;
@using Orchard.Utility.Extensions;

@{
    Script.Require("ShapesBase");
    ContentPart contentPart = Model.ContentPart;
}
@if (contentPart.HasPublished()) {
    @Html.ItemDisplayLink(T("View").Text, (ContentItem)Model.ContentPart.ContentItem)
    @T(" | ")

    if (contentPart.HasDraft()) {
        if (Authorizer.Authorize(Permissions.PublishContent, contentPart) || contentPart.HasPublicPreviewUrl()) {
            @Html.Link(T("Publish Draft").Text, Url.Action("Publish", "Admin", new {area = "Contents", id = contentPart.ContentItem.Id, returnUrl = Request.ToUrlString()}), new {itemprop = "UnsafeUrl"})
            @T(" | ")
        }

        if (Authorizer.Authorize(Permissions.PreviewContent, contentPart)) {
            @Html.Link(T("Preview").Text, Url.ItemPreviewUrl(contentPart))
            @T(" | ")
        }
        if (Authorizer.Authorize(Permissions.CreatePreviewAccessToken, contentPart)) {
            if (contentPart.HasPublicPreviewUrl()) {
                @Html.ActionLink(T("Disable Public Previews").Text, "RevokeAccessToken", "Admin", new { area = "Contents", id = contentPart.Id, version = contentPart.ContentItem.Version, returnUrl = Request.ToUrlString() }, new { itemprop = "UnsafeUrl" })}
            else {
                @Html.ActionLink(T("Allow Public Previews").Text, "CreateAccessToken", "Admin", new { area = "Contents", id = contentPart.Id, version = contentPart.ContentItem.Version, returnUrl = Request.ToUrlString() }, new { itemprop = "UnsafeUrl" })
            }
            @T(" | ")
        }
    }

    if (Authorizer.Authorize(Permissions.PublishContent, contentPart)) {
        @Html.Link(T("Unpublish").Text, Url.Action("Unpublish", "Admin", new {area = "Contents", id = contentPart.ContentItem.Id, returnUrl = Request.ToUrlString()}), new {itemprop = "UnsafeUrl"})
        @T(" | ")
    }
} else {
    if (contentPart.HasDraft()) {
        if (Authorizer.Authorize(Permissions.PreviewContent, contentPart) || contentPart.HasPublicPreviewUrl()) {
            @Html.Link(T("Preview").Text, Url.ItemPreviewUrl(contentPart))
            @T(" | ")
        }
        if (Authorizer.Authorize(Permissions.CreatePreviewAccessToken, contentPart)) {
            if (contentPart.HasPublicPreviewUrl()) {
                @Html.ActionLink(T("Disable Public Previews").Text, "RevokeAccessToken", "Admin", new { area = "Contents", id = contentPart.Id, version = contentPart.ContentItem.Version, returnUrl = Request.ToUrlString() }, new { itemprop = "UnsafeUrl" })}
            else {
                @Html.ActionLink(T("Allow Public Previews").Text, "CreateAccessToken", "Admin", new { area = "Contents", id = contentPart.Id, version = contentPart.ContentItem.Version, returnUrl = Request.ToUrlString() }, new { itemprop = "UnsafeUrl" })
            }
            @T(" | ")
        }
    }

    if (Authorizer.Authorize(Permissions.PublishContent, contentPart)) {
        @Html.Link(T("Publish").Text, Url.Action("Publish", "Admin", new {area = "Contents", id = contentPart.ContentItem.Id, returnUrl = Request.ToUrlString()}), new {itemprop = "UnsafeUrl"})
        @T(" | ")
    }
}